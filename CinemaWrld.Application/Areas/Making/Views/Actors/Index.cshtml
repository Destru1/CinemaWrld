@model PaginationActorsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Actors.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Actors.First().MovieName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Actors.First().PlayingAs)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Actors) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MovieName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlayingAs)
            </td>
            <td>

                <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                @if (this.User.Identity.IsAuthenticated)
                {
                    <span>|</span>
                    <a asp-action="Update" asp-route-id="@item.Id">Update</a>

                    @if (this.User.IsInRole(RolesConstants.ADMIN_ROLE_NAME))
                    {
                        <span>|</span>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }




                }

            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Actors pagination">
    <ul class="pagination">
        @{ 
            bool isBackButtonIsDisabled = this.Model.CurrentPage == 1;
            string backButtonDisabledClass = isBackButtonIsDisabled ? "disabled" : "";

            bool isNetxButtonDisabled = this.Model.CurrentPage >= this.Model.TotalPages;
            string nextButtonDisabledClass = isNetxButtonDisabled ? "disabled" : "";

            int previousPageIndex = this.Model.CurrentPage - 1;
            int nextPageIndex = this.Model.CurrentPage + 1;

        }

        <li class="page-item @backButtonDisabledClass">
            <a class="page-link" asp-action="Index" asp-route-page="@previousPageIndex">Previous</a>
        </li>

        @for (int pageIndex = 1; pageIndex < this.Model.TotalPages; pageIndex++)
        {
            bool isPageButtonActive = pageIndex == this.Model.CurrentPage;
            string pageButtonActiveClass = isPageButtonActive ? "active" : "";

            <li class="page-item @pageButtonActiveClass" aria-current ="page">
                <a class="page-link" asp-action="Index" asp-route-page="@pageIndex"> @pageIndex </a>
            </li>
        }

        <li class="page-item @nextButtonDisabledClass">
            <a class="page-link" asp-action="Index" asp-route-page="@nextPageIndex">Next</a>
        </li>


    </ul>

</nav>
